{"version":3,"sources":["config.js","API.js","helpers.js","Hooks/useHomeHooks.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","images/no_image.jpg","components/Spinner/index.js","components/Spinner/Spinner.styles.js","components/SearchBar/SearchBar.styles.js","images/search-icon.svg","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","components/Header/Header.styles.js","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/index.js","components/Home.styles.js","components/Home.js","GlobalStyle.js","Hooks/useMovieHooks.js","components/BredCrums/BredCrums.styles.js","components/BredCrums/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","Screens/Movie.js","Screens/NotFound.js","images/bg.jpg","components/LoginView/LoginView.styles.js","images/avatar.png","API/Api.js","context/LoginContext.js","components/LoginView/index.js","Screens/Login.js","components/SignUp/Signup.styles.js","components/SignUp/index.js","App.js","index.js"],"names":["API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPreservedState","statename","stateResult","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Wraper","styled","div","Content","minmax","Grid","heading","children","image","Text","HeroImage","title","text","Image","img","bottomR","clickable","Thumb","movieid","bottomBorderNone","final","require","encrypt","toString","replaceAll","to","src","alt","Spinner","SearchBox","box","setsearchTerms","useState","state","setstate","initial","useRef","useEffect","current","setTimeout","clearTimeout","onClick","focus","MovieImg","ref","type","onChange","event","target","placeholder","button","Button","callback","Wrapper","LogoImg","TMDBLogoImg","Header","RNDBLogo","TMDBLogo","ThumpContainer","MovieText","Home","searchTerms","loader","setloader","error","seterror","loadMore","setloadMore","Api","movies","prev","console","log","setItem","useHomeHooks","tokenCheck","localStorage","backdrop_path","original_title","overview","map","index","date","release_date","slice","NoImage","id","GlobalStyle","createGlobalStyle","useMovieHooks","MovieId","loading","setloading","result","API","movie","credits","director","crew","filter","member","job","cast","BreadCrums","movieTitle","backdrop","MovieInfo","className","vote_average","length","name","Box","DataView","propTypes","PropTypes","string","MovieInfoBar","runtime","budget","revenue","Actor","url","character","encryptor","Movie","useParams","decryptor","decrypt","profile_path","credit_id","NotFound","bgImage","instance","axios","create","baseURL","LoginAuth","createContext","LoginContext","props","token","settoken","Provider","toastPosition","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","LoginView","useContext","email","setemail","setpassword","toastId","navigate","useNavigate","onSubmit","preventDefault","toast","post","update","render","TYPE","SUCCESS","data","response","ERROR","profileImg","required","htmlFor","Login","Signup","setname","minLength","App","path","element","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a8a9af9.chunk.js","sourcesContent":["// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPreservedState = (statename) => {\n  const stateResult = sessionStorage.getItem(statename)\n  return stateResult && JSON.parse(stateResult)\n}\n","import { useState, useEffect } from 'react'\r\nimport Api from '../API'\r\nimport {isPreservedState} from '../helpers'\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_pages: 0,\r\n    total_results:0\r\n}\r\nexport const useHomeHooks = () => {\r\n    const [searchTerms, setsearchTerms] = useState('')\r\n    const [state, setstate] = useState(initialState)\r\n    const [loader, setloader] = useState(false)\r\n    const [error, seterror] = useState(false)\r\n    const [loadMore, setloadMore] = useState(false)\r\n   \r\n    \r\n\r\n    const fetchMovies = async(page,searchTerms=\"\") => {\r\n        try {\r\n            seterror(false)\r\n            setloader(true)\r\n            const movies = await Api.fetchMovies(searchTerms, page)\r\n            setstate(prev => (\r\n                {\r\n                    ...movies,\r\n                    results: page > 1 ? [...prev.results,...movies.results] : [...movies.results]\r\n                }\r\n            ))    \r\n        } catch (error) {\r\n            console.log(error)\r\n            seterror(true)\r\n        }\r\n        setloader(false)\r\n    }\r\n    console.log(state)\r\n\r\n    useEffect(() => {\r\n        if (!searchTerms) {\r\n            const stateResult = isPreservedState('homestate')\r\n            if (stateResult) {\r\n                setstate(stateResult)\r\n                return\r\n            }\r\n        }\r\n       setstate(initialState)\r\n       fetchMovies(1, searchTerms)\r\n    }, [searchTerms])\r\n   \r\n    useEffect(() => {\r\n        if (!loadMore) return\r\n        fetchMovies(state.page + 1, searchTerms)\r\n        setloadMore(false) \r\n       \r\n    }, [state.page, searchTerms, loadMore])\r\n    \r\n    useEffect(() => {\r\n        if (!searchTerms) {\r\n            sessionStorage.setItem('homestate',JSON.stringify(state))\r\n        }\r\n       \r\n    \r\n    }, [searchTerms,state])\r\n    \r\n    return {state,loader,error,setstate,setsearchTerms,searchTerms,setloadMore}\r\n}\r\n/*\r\n\r\n*/\r\n","import styled from 'styled-components'\r\n\r\nexport const Wraper = styled.div`\r\n   margin: 0 auto;\r\n   padding: 0 20px;\r\n   max-width: var(--maxWidth);\r\n   \r\n`\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill,minmax(${({minmax})=>minmax},1fr)) ;\r\n  grid-gap: 2rem;\r\n\r\n \r\n`","import React from 'react'\r\nimport { Wraper, Content } from './Grid.styles';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Grid = ({heading,children,minmax}) => {\r\n    return (\r\n        <Wraper >\r\n            <h1>{heading}</h1>\r\n            <Content minmax={minmax}>\r\n                {children}\r\n            </Content>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nGrid.propTypes = {\r\n    heading: PropTypes.string,\r\n    minmax:PropTypes.string\r\n}\r\n\r\nexport default Grid\r\n\r\n\r\n\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const Wraper = styled.div`\r\nbackground: linear-gradient(to bottom ,rgb(0,0,0,0)41%,rgb(0,0,0,0.65) 100%),\r\n            url(${({image})=>image}),var(--darkGray);\r\n            background-size:cover;\r\n            background-position: center;\r\n            background-repeat: no-repeat;\r\n            position: relative;\r\n            animation: animateimage 2s;\r\n            height: 600px;\r\n            @keyframes animateimage{\r\n                from{\r\n                    opacity: 0;\r\n                }\r\n                to{\r\n                    opacity: 1;\r\n                }\r\n            }\r\n\r\n           \r\n          \r\n`\r\n\r\nexport const Content = styled.div`\r\n      margin: 0 auto;\r\n      padding: 20px;\r\n      max-width: var(--maxWidth);\r\n`\r\n\r\nexport const Text = styled.div`\r\n     z-index: 100;\r\n     position: absolute;\r\n     bottom: 40px;\r\n     color: var(--white);\r\n     margin-right: 20px;\r\n     max-width: 700px;\r\n     min-height:100px;\r\n\r\n     h1{\r\n       font-size: var(--fontSuperBig);\r\n       @media (max-width: 720px){\r\n       font-size: var(--fontBig);\r\n       }\r\n     }\r\n\r\n     p{\r\n        font-size: var(--fontMed);\r\n        @media (max-width: 720px){\r\n        font-size: var(--fontSmall);\r\n     }\r\n\r\n     @media (max-width:720px){\r\n         max-width: 100%;\r\n     }\r\n     \r\n     }\r\n\r\n`\r\n","import React from 'react'\r\nimport { Wraper, Content, Text } from './HeroImage.styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst HeroImage = ({image,title,text}) => {\r\n    return (\r\n        <Wraper image={image}>\r\n            <Content >\r\n                <Text>\r\n                    <h1>{ title}</h1>\r\n                    <p>{ text}</p>\r\n                </Text>\r\n            </Content>\r\n       </Wraper>\r\n    )\r\n}\r\n\r\nHeroImage.propTypes = {\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text:PropTypes.string\r\n}\r\n\r\nexport default HeroImage\r\n","import styled from 'styled-components'\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  object-fit: cover;\r\n  border-radius: ${({bottomR})=>bottomR?'20px 20px 0 0':'20px'} ;\r\n  transition: all 0.3s;\r\n  animation: animation 0.5s;\r\n  height: ${({ clickable }) => clickable ? '300px':'600px'};\r\n  \r\n  \r\n  \r\n\r\n  @keyframes animation{\r\n      from{\r\n         opacity: 0;\r\n      }\r\n      to{\r\n         opacity: 1;\r\n      }\r\n  }\r\n\r\n  :hover{\r\n      opacity: 0.8;\r\n  }\r\n`","import React from 'react'\r\nimport { Image } from './Thumb.styles'\r\nimport { Link } from 'react-router-dom'\r\nimport PropsTypes from 'prop-types'\r\n\r\nconst Thumb = ({ image, movieid, clickable ,bottomBorderNone }) => {\r\n    const key = process.env.REACT_APP_API_KEY\r\n    const encrypt = require('simple-encryptor')(key)\r\n    const encrypted = encrypt.encrypt(movieid)\r\n    const movieEnc = encrypted.toString()\r\n    const final = movieEnc.replaceAll('/','%nk%')\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {clickable ?\r\n                <Link to={`/Movie/${final}`} >\r\n                    <Image src={image} alt='movie-image' clickable={clickable} bottomR={ bottomBorderNone}/>\r\n                </Link> :\r\n                       <Image src={image} alt='movie-image' bottomR={ bottomBorderNone}/>}\r\n        </div>  \r\n        \r\n    )\r\n}\r\n\r\nThumb.propTypes = {\r\n    image: PropsTypes.string,\r\n    movieid: PropsTypes.number,\r\n    clickable:PropsTypes.bool   \r\n}\r\nexport default Thumb\r\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import {Spinner} from './Spinner.styles'\r\n\r\nexport default Spinner\r\n","import styled from 'styled-components'\r\n\r\nexport const Spinner = styled.div`\r\n   width: 50px;\r\n   height: 50px;\r\n   border: 5px solid var(--lightGray);\r\n   animation: animate 1.5s linear infinite;\r\n   border-right: 5px solid var(--darkGray);\r\n   border-bottom: 5px solid var(--darkGray);\r\n   border-radius: 50%;\r\n   margin: 20px auto;\r\n\r\n   @keyframes animate{\r\n       0%{\r\n          transform: rotate(0deg) ;\r\n       }\r\n       100%{\r\n          transform: rotate(360deg);\r\n        }\r\n   }\r\n`","import styled from 'styled-components'\r\n\r\nexport const Wraper = styled.div`\r\n\r\n margin: 0;\r\n background-color: var(--darkGray);\r\n padding: 20px 0;\r\n`\r\n\r\nexport const Content = styled.div`\r\n width: 90%;\r\n padding: 3px 10px;\r\n background-color: var(--medGray);\r\n display: flex;\r\n justify-content: center;\r\n margin: 0 auto;\r\n border-radius: 40px;\r\n max-width: var(--maxWidth);\r\n img{\r\n     width: 25px;\r\n     height: 25px;\r\n     margin: auto 5px;\r\n     margin-right: 10px;\r\n }\r\n input{\r\n     border-style: none;\r\n     border-radius: 10px;\r\n     width: 100%;\r\n     padding: 8px 10px;\r\n     outline: none;\r\n     background: transparent;\r\n     color: var(--white);\r\n     font-size: var(--fontMed);\r\n }\r\n\r\n`","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import React,{useState,useEffect,useRef} from 'react'\r\nimport { Wraper, Content } from './SearchBar.styles'\r\nimport MovieImg from '../../images/search-icon.svg'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SearchBox = ({box,setsearchTerms}) => {\r\n   const [state, setstate] = useState('')\r\n   const initial = useRef(true)\r\n    \r\n    useEffect(() => {\r\n        if (initial.current === true) {\r\n            initial.current = false\r\n            return\r\n       }\r\n        const time = setTimeout(() => {\r\n            setsearchTerms(state)\r\n        }, 500);\r\n\r\n        return () => {\r\n            clearTimeout(time)\r\n          };\r\n    }, [state,setsearchTerms])\r\n    \r\n    return (\r\n        <Wraper>\r\n            <Content>\r\n                <img onClick={()=>box.current.focus()} src={MovieImg} alt='search-icon'/>\r\n                <input ref={box} type=\"text\" value={state} onChange={(event)=>setstate(event.target.value)} placeholder='Search Movie' />\r\n            </Content>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nSearchBox.propTypes = {\r\n    box: PropTypes.object,\r\n    setsearchTerms:PropTypes.func\r\n}\r\n\r\nexport default SearchBox\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wraper = styled.button`\r\n  outline: none;\r\n  background-color: var(--darkGray);\r\n  color:var(--white);\r\n  width: 80%;\r\n  margin: 20px auto;\r\n  display: block;\r\n  max-width: 250px;\r\n  padding: 9px;\r\n  border-radius: 30px;\r\n  font-size: var(--fontMed);\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  :hover{\r\n      opacity: 0.8;\r\n  }\r\n`\r\n\r\n","import React from 'react'\r\nimport { Wraper } from './Button.styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({text,callback}) => {\r\n    return (\r\n        <Wraper type='button' onClick={callback}>{text}</Wraper>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    callback:PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import styled from 'styled-components';\r\n\r\n\r\n\r\nexport const Wrapper = styled.div`\r\nbackground: var(--darkGray);\r\npadding: 0 20px;\r\n`\r\n\r\nexport const Content = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\nmax-width: var(--maxWidth);\r\npadding: 20px 0px;\r\nmargin: 0 auto;\r\n\r\n`\r\n\r\nexport const LogoImg = styled.img`\r\nwidth: 200px;\r\n\r\n@media (max-width: 500px){\r\n   width: 150px;\r\n}\r\n\r\n`\r\n\r\nexport const TMDBLogoImg = styled.img`\r\nwidth: 100px;\r\n\r\n@media (max-width: 500px){\r\n    width: 80px;\r\n}\r\n`\r\n","export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import React from 'react'\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles'\r\nimport RNDBLogo from '../../images/react-movie-logo.svg'\r\nimport TMDBLogo from '../../images/tmdb_logo.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <Link to='/'>\r\n                    <LogoImg src={ RNDBLogo} alt='RNDBlogo'/>\r\n                </Link>\r\n                \r\n                <TMDBLogoImg src={ TMDBLogo} alt='TMDBLogo'/>\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\n\r\nexport const ThumpContainer = styled.div`\r\n   box-shadow: 0 2px 4px 0;\r\n   border-radius: 20px 20px 10px 10px;\r\n   \r\n`\r\nexport const MovieText = styled.div`\r\n    margin: 6px 10px;\r\n    \r\n  h3{\r\n      margin: 0 0;\r\n      font-size: var(--fontMed);\r\n\r\n      @media (max-width:786px){\r\n        font-size: var(--fontSmall);\r\n      }\r\n  }\r\n  p{\r\n      margin: 2px 0;\r\n      font-size: var(--fontSmall);\r\n  }\r\n`","import React,{useRef,useEffect} from 'react'\r\nimport {  BACKDROP_SIZE, IMAGE_BASE_URL } from '../config'\r\nimport {useHomeHooks} from '../Hooks/useHomeHooks'\r\nimport Grid from './Grid'\r\nimport HeroImage from './HeroImage'\r\nimport Thumb from './Thumb'\r\nimport NoImage from '../images/no_image.jpg'\r\nimport Spinner from './Spinner'\r\nimport SearchBox from './SearchBar'\r\nimport Button from './Button'\r\nimport Header from './Header'\r\nimport { ThumpContainer, MovieText } from './Home.styles'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Home = () => {\r\n    \r\n    const {state, loader,setsearchTerms,searchTerms,setloadMore} = useHomeHooks()\r\n    const box = useRef()\r\n    let tokenCheck =useRef()\r\n\r\n    useEffect(() => {\r\n        console.log(tokenCheck)\r\n        tokenCheck.current = localStorage.getItem('token')\r\n    }, [])\r\n\r\n    if (!loader && tokenCheck.current === null) {\r\n        return (\r\n            <Navigate to='/Login'/>\r\n        )\r\n    }\r\n   \r\n    \r\n    return (\r\n        <div>{loader?<></>:<>\r\n                <Header />\r\n                {!searchTerms && state.results[0] ? <HeroImage\r\n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n                    title={state.results[0].original_title}\r\n                    text={state.results[0].overview}\r\n                /> : null}\r\n                <SearchBox box={box} setsearchTerms={setsearchTerms} />\r\n                <Grid heading={searchTerms ? 'Search Results' : 'Popular content'} minmax={'300px'}>\r\n                    {state.results.map((value, index) => {\r\n                        const date = value.release_date.slice(0, 4)\r\n                        return (\r\n                            <ThumpContainer key={value.id}>\r\n                                <Thumb\r\n                           \r\n                                    clickable\r\n                                    image={value.backdrop_path ? `${IMAGE_BASE_URL}${BACKDROP_SIZE}${value.backdrop_path}` : NoImage}\r\n                                    movieid={value.id}\r\n                                    bottomBorderNone={true}\r\n                                />\r\n                                <MovieText>\r\n                                    <h3>{value.title}</h3>\r\n                                    <p>{date}</p>\r\n                                \r\n                                </MovieText>\r\n                            </ThumpContainer>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n                {loader && <Spinner />}\r\n                {!loader && state.page < state.total_pages &&\r\n                    <Button text='Load More' callback={() => setloadMore(true)} />}</>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n :root{\r\n     --maxWidth:1380px;\r\n     --white:#fff;\r\n     --lightGray:#eee;\r\n     --medGray:#353535;\r\n     --darkGray:#1c1c1c;\r\n     --fontSuperBig:2.5rem;\r\n     --fontBig:1.5rem;\r\n     --fontMed:1.3rem;\r\n     --fontSmall:1rem;\r\n     \r\n }\r\n\r\n *{\r\n     box-sizing: border-box;\r\n     font-family: 'Abel',sans-serif;\r\n     \r\n     \r\n }\r\n\r\n body{\r\n   \r\n     margin: 0;\r\n     padding: 0;\r\n    -webkit-overflow-scrolling: inherit;\r\n     h1{\r\n         font-size: 2rem;\r\n         font-weight: 600;\r\n         color: var(---white);\r\n     }\r\n     h3{\r\n         font-size: 1.1rem;\r\n         font-weight: 600;\r\n\r\n     }\r\n     p{\r\n         font-size: 1rem;\r\n         color: var(---white);\r\n     }\r\n }\r\n\r\n`","import { useState, useEffect } from 'react'\r\nimport API from '../API'\r\nimport {isPreservedState} from '../helpers'\r\n\r\n\r\nconst useMovieHooks = (MovieId) => {\r\n    \r\n    const [state, setstate] = useState({})\r\n    const [loading, setloading] = useState(true)\r\n    const [error, seterror] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const result = isPreservedState(MovieId)\r\n        if (result) {\r\n            \r\n            setstate(result)\r\n            setloading(false)\r\n            return\r\n        };\r\n\r\n        (async (MovieId) => {\r\n            \r\n            try {\r\n                const movie = await API.fetchMovie(MovieId)\r\n                const credits = await API.fetchCredits(MovieId)\r\n                const director = credits.crew.filter((member) => (\r\n                    member.job==='Director'\r\n                ))\r\n                \r\n\r\n                setstate({\r\n                    ...movie,\r\n                    credits: credits.cast,\r\n                    director\r\n                })\r\n                \r\n                setloading(false)\r\n            } catch (error) {\r\n               seterror(true) \r\n            }\r\n        })(MovieId);\r\n        \r\n    }, [MovieId])\r\n\r\n    useEffect(() => {\r\n        sessionStorage.setItem(MovieId,JSON.stringify(state))\r\n    }, [state,MovieId])\r\n\r\n    return {state,loading,error}\r\n}\r\n\r\nexport default useMovieHooks\r\n","import styled from 'styled-components'\r\n\r\nexport const Wraper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: var(--medGray);\r\n  height: 70px;\r\n  \r\n\r\n`\r\nexport const Content = styled.div`\r\n   width: 100%;\r\n   max-width: var(--maxWidth);\r\n    \r\n   @media (max-width:1280px){\r\n        padding: 0 20px;\r\n    }\r\n\r\nspan{\r\n    color: var(--white);\r\n    font-size: var(--fontMed);\r\n\r\n    @media (max-width:768px){\r\n        font-size: var(--fontSmall);\r\n    }\r\n}\r\n\r\n`","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Wraper, Content } from './BredCrums.styles'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst BreadCrums = ({movieTitle}) => {\r\n    return (\r\n        <Wraper>\r\n            <Content>\r\n                <Link to='/'>\r\n                    <span>Home</span>\r\n                </Link>\r\n                <span> | </span>\r\n                <span>{movieTitle}</span>\r\n            </Content>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nBreadCrums.propTypes = {\r\n    movieTitle:PropTypes.string\r\n}\r\n\r\nexport default BreadCrums\r\n","import styled from 'styled-components'\r\nimport { BACKDROP_SIZE, IMAGE_BASE_URL } from '../../config'\r\n\r\nexport const Wraper = styled.div`\r\n   background: ${({backdrop})=>backdrop?`url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})`:'#eee'};\r\n   background-position:100% center;\r\n   background-size: cover;\r\n   padding: 40px 20px;\r\n   \r\n`\r\n\r\nexport const Content = styled.div`\r\n   display: flex;\r\n   max-width: var(--maxWidth);\r\n   justify-content: center;\r\n   margin: 0 auto;\r\n   height: 100%;\r\n   background-color: rgb(0,0,0,0.7);\r\n   border-radius: 20px;\r\n   padding: 0;\r\n   animation: cont 0.7s ease-in-out 1 ;\r\n  \r\n   @keyframes cont{\r\n       0%{transform:translateX(3000px)}\r\n      100%{transform:translateX(0px)}\r\n   }\r\n  \r\n\r\n\r\n   @media (max-width:1000px){\r\n    flex-wrap: wrap;\r\n    min-width: fit-content;\r\n   }\r\n\r\n   \r\n   \r\n`\r\n\r\nexport const Text = styled.div`\r\n   max-width: 950px;\r\n   padding: 20px 40px;\r\n   color: var(--white);\r\n   font-size: var(--fontMed);\r\n   animation: textview 1.2s ease-out 1 ;\r\n  \r\n   \r\n\r\n   @keyframes textview{\r\n    0% {opacity:0}\r\n    75%{opacity:0}\r\n    100%{opacity:1}\r\n   }\r\n\r\n   @media (max-width:768px){\r\n    font-size: var(--fontSmall);\r\n   }\r\n\r\n   p{\r\n    font-size: var(--fontMed);\r\n\r\n    @media (max-width:768px){\r\n    font-size: var(--fontSmall);\r\n   }\r\n   }\r\n\r\n  \r\n  h3{\r\n    font-size: var(--fontBig);\r\n\r\n    @media (max-width:768px){\r\n    font-size: var(--fontMed);\r\n    }\r\n\r\n  }\r\n   .rat-dir{\r\n       display: flex;\r\n   }\r\n\r\n   .rating{\r\n       margin-right: 40px;\r\n      \r\n       h3{\r\n           color:var(--white);\r\n       }\r\n       .vote{\r\n        color: black;\r\n        background-color:var(--white) ;\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-weight: 900;\r\n       }\r\n\r\n       .director{\r\n           align-self: center;\r\n       }\r\n       \r\n   }\r\n\r\n  \r\n`","import React from 'react'\r\nimport { IMAGE_BASE_URL,BACKDROP_SIZE } from '../../config'\r\nimport Thumb from '../Thumb'\r\nimport { Wraper, Content, Text } from './MovieInfo.styles'\r\nimport NoImage from '../../images/no_image.jpg'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MovieInfo = ({movie}) => {\r\n    return (\r\n        <Wraper backdrop={movie.backdrop_path}>\r\n            <Content>\r\n                <Thumb  image={movie.backdrop_path ? `${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}` : NoImage} movieid={movie.id} clickable={ false}/>\r\n                <Text>\r\n                    <h1>{movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{movie.overview}</p>\r\n                    \r\n                    <div className='rat-dir'>\r\n                        <div className='rating'>\r\n                            <h3>Rating</h3>\r\n                            <div className='vote'>{ movie.vote_average}</div>\r\n                        </div>\r\n                        \r\n                        <div className='director'>\r\n                            <h3>Director{movie.director.length > 1 ? 's' : ''}</h3>\r\n                            {movie.director.map((value, index) => {\r\n                                return (\r\n                                    <p className='dirname' key={value.id}>{value.name}</p>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </Text>\r\n            </Content>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nMovieInfo.propTypes = {\r\n    movie:PropTypes.object\r\n}\r\n\r\nexport default MovieInfo\r\n","import styled from 'styled-components';\r\n\r\nexport const Wraper = styled.div`\r\n   display: flex;\r\n   justify-content: center;\r\n   background-color: var(--darkGray);\r\n`\r\n\r\nexport const Content = styled.div`\r\n   display: flex;\r\n   width: 100%;\r\n   max-width: var(--maxWidth);\r\n   justify-content: space-between;\r\n   flex-wrap: wrap;\r\n   padding: 10px 0;\r\n\r\n  \r\n`\r\n\r\nexport const Box = styled.div`\r\n   color: var(--white);\r\n   background-color: var(--medGray);\r\n   padding: 0 20px;\r\n   flex: 1;\r\n   text-align: center;\r\n   border-radius: 20px;\r\n   margin:15px 20px;\r\n   font-weight: 900;\r\n   font-size: var(--fontMed);\r\n   min-width: 200px;\r\n\r\n   @media (max-width:786px){\r\n    font-size: var(--fontSmall);\r\n   \r\n   }\r\n   \r\n`","import React from 'react'\r\nimport { Wraper, Box , Content} from './MovieInfoBar'\r\nimport {calcTime,convertMoney} from '../../helpers'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MovieInfoBar = ({movie}) => {\r\n\r\n    const DataView = ({title,value}) => {\r\n        return (\r\n            <Box>\r\n                <p>{title}: {value}</p>\r\n            </Box>\r\n        )\r\n    }\r\n    \r\n\r\n    return (\r\n        <Wraper>\r\n            <Content>\r\n              <DataView title='Running time' value={calcTime(movie.runtime)}/>\r\n              <DataView title='Budget' value={convertMoney(movie.budget)}/>\r\n              <DataView title='Revenue' value={convertMoney(movie.revenue)}/>\r\n            </Content>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nMovieInfoBar.propTypes = {\r\n    Movie:PropTypes.object\r\n}\r\n\r\nDataView.propTypes = {\r\n    title: PropTypes.string,\r\n    \r\n}\r\n\r\nexport default MovieInfoBar\r\n","import styled from 'styled-components'\r\n\r\nexport const Wraper = styled.div`\r\n  width: 100%;\r\n  height: 400px;\r\n  background-color: var(--darkGray);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n  padding: 5px 0;\r\n  color: var(--white);\r\n  justify-content: space-around;\r\n\r\n  h3{\r\n      margin: 0 auto;\r\n      text-align: center;\r\n  }\r\n  p{\r\n      margin: 0 auto;\r\n      text-align: center;\r\n  }\r\n`\r\n\r\nexport const Image = styled.img`\r\n   width: 90% cover;\r\n   height: 300px;\r\n   border-radius: 20px;\r\n   margin: 0 0 5px 0;\r\n   \r\n`\r\n\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { Wraper, Image } from './Actor.styles'\r\n\r\n\r\nconst Actor = ({url,name,character}) => {\r\n    return (\r\n        <Wraper>\r\n            <Image src={url}/>\r\n            <h3>{name}</h3>\r\n            <p>{character}</p>\r\n       </Wraper>\r\n    )\r\n}\r\n\r\nActor.propTypes = {\r\n    url: PropTypes.string,\r\n    name: PropTypes.string,\r\n    character: PropTypes.string\r\n}\r\n\r\nexport default Actor\r\n","import React from 'react'\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config'\r\nimport NoImage from '../images/no_image.jpg'\r\nimport {useParams} from 'react-router-dom'\r\nimport useMovieHooks from '../Hooks/useMovieHooks'\r\nimport BreadCrums from '../components/BredCrums'\r\nimport Spinner from '../components/Spinner'\r\nimport MovieInfo from '../components/MovieInfo'\r\nimport MovieInfoBar from '../components/MovieInfoBar'\r\nimport Grid from '../components/Grid'\r\nimport Actor from '../components/Actor'\r\n\r\n\r\nconst key = process.env.REACT_APP_API_KEY\r\nconst encryptor = require('simple-encryptor')(key)\r\n\r\nconst Movie = () => {\r\n\r\n    const { MovieId } = useParams();\r\n    const final = MovieId.replaceAll('%nk%','/')\r\n    const decryptor = encryptor.decrypt(final)\r\n    \r\n    console.log('hello',decryptor)\r\n    const { state, loading, error } = useMovieHooks(decryptor)\r\n    console.log(state)\r\n    if (loading) return <Spinner />\r\n    if(error) return <div>Something went wrong....</div>\r\n\r\n    return (\r\n        <>\r\n            <BreadCrums movieTitle={state.original_title} />\r\n            <MovieInfo movie={state} />\r\n            <MovieInfoBar movie={state} />\r\n            <Grid heading='Cast' minmax={'200px'}>\r\n                {state.credits.map((value,index) => {\r\n                    return (\r\n                        <Actor\r\n                            key={value.credit_id}\r\n                            url={value.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${value.profile_path}` : NoImage}\r\n                            name={value.name}\r\n                            character={value.character}\r\n                        />\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div >\r\n           Not Found \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","export default __webpack_public_path__ + \"static/media/bg.a6e3c68c.jpg\";","import styled from 'styled-components'\r\nimport bgImage from '../../images/bg.jpg'\r\n\r\n\r\nexport const Wraper = styled.div`\r\n   background:url(${bgImage}) no-repeat;\r\n   height: 100vh;\r\n   background-size: cover;\r\n   background-position: center;\r\n   position: relative;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   padding: 0 10px;\r\n`\r\n\r\nexport const Content = styled.div`\r\n   width: 100%;\r\n   height: 400px;\r\n   max-width: 485px;\r\n   background-color: rgba(0,0,0,0.7);\r\n   border-radius: 10px;\r\n   box-shadow: 0 15px 25px rgba(0,0,0,0.5) ;\r\n   position: relative;\r\n   display: flex;\r\n   align-items: center;\r\n   flex-direction: column;\r\n   padding: 20px 40px;\r\n\r\n   @media (max-width:400px){\r\n      padding:30px 20px;\r\n   }\r\n\r\n   .imgContainer{\r\n      position: absolute;\r\n      width: 100px;\r\n      height: 100px;\r\n      background-color:  rgba(255,255,255,0.8);\r\n      top:-12%;\r\n      left:50% -50;\r\n      border-radius: 50%;\r\n      overflow: hidden;\r\n      pointer-events: none;\r\n   }\r\n   img{\r\n      width: 100%;\r\n      height: 100%;\r\n   }\r\n\r\n   .logintext{\r\n      font-family: 'Segoe UI', 'Tahoma', 'Geneva', 'Verdana', 'sans-serif';\r\n      color: #ff652f;\r\n      margin-top: 15%;\r\n      font-size: 1.8rem;\r\n   }\r\n   .form{\r\n      width: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      flex-direction: column;\r\n   }\r\n   .inputcontainer{\r\n      width:100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      position: relative;\r\n      \r\n   }\r\n\r\n   .inpfield{\r\n      outline: none;\r\n      border: none;\r\n      height: 40px;\r\n      font-size: 18px;\r\n      padding: 0 10px;\r\n      background-color: transparent;\r\n      border-bottom: 1px solid silver;\r\n      margin-bottom: 30px;\r\n      color: var(--white);\r\n      font-family: 'sans-serif';\r\n      transition: 0.3s ease-in;\r\n      \r\n   }\r\n   \r\n  .inputcontainer label{\r\n     position: absolute;\r\n     bottom: 40px;\r\n     transition: 0.3s ease;\r\n     font-size: 18px;\r\n     color: var(--white);\r\n     font-family: 'sans-serif';\r\n     pointer-events: none;\r\n  }\r\n \r\n  .inputcontainer input:not([value='']) ~ label,\r\n  .inputcontainer input:valid ~ label,\r\n  .inputcontainer input:focus ~ label{\r\n     transform: translateY(-23px);\r\n     font-size: 20px;\r\n     color: #ff652f;\r\n  }\r\n  \r\n\r\n  .inputcontainer input:-webkit-autofill{\r\n    box-shadow:0 0 0 1000px rgba(0,0,0,0.3) inset !important;\r\n    \r\n  }\r\n\r\n  .inputcontainer .underline{\r\n     position: absolute;\r\n     bottom: 30px;\r\n     width: 100%;\r\n     height: 2px;\r\n     \r\n  }\r\n  .inputcontainer .underline:before{\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      content: '';\r\n      background-color: var(--white);\r\n      transform: scaleX(0);\r\n      transition:transform 0.3s ease;\r\n  }\r\n  .inputcontainer input:focus ~ .underline:before,\r\n  .inputcontainer input:valid ~ .underline:before{\r\n      \r\n\r\n      transform: scaleX(1);\r\n  }\r\n\r\n  .btn{\r\n      width: 100px;\r\n      height: 40px;\r\n      border: none;\r\n      background-color: #ff652f;\r\n      cursor: pointer;\r\n      border-radius: 5px;\r\n      font-family: sans-serif;\r\n      font-size: 18px;\r\n      font-weight: 400;\r\n      color: var(--darkGray);\r\n  }\r\n  .bottomV{\r\n     display: flex;\r\n     flex-direction: row;\r\n     justify-content: space-between;\r\n     width: 100%;\r\n     align-items: center;\r\n  }\r\n  .link{\r\n      \r\n      font-size: 20px;\r\n      color: var(--white);\r\n  }\r\n  .linkd{\r\n      color: #ff652f;\r\n  }\r\n \r\n`\r\n","export default __webpack_public_path__ + \"static/media/avatar.f6b9b89b.png\";","import axios from 'axios';\r\n\r\nconst instance= axios.create({\r\n    baseURL:'https://technotoil-movie.herokuapp.com/api/',\r\n   \r\n})\r\n\r\nexport default instance","import React, { createContext,useState } from 'react'\r\n\r\nexport const LoginAuth = createContext()\r\n\r\nexport const LoginContext = (props) => {\r\n    const [token, settoken] = useState(null)\r\n\r\n    return (\r\n        <LoginAuth.Provider value={[token,settoken]}>\r\n             {props.children}\r\n        </LoginAuth.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import React,{useState,useRef,useContext} from 'react'\r\nimport { Wraper, Content} from './LoginView.styles'\r\nimport profileImg from '../../images/avatar.png'\r\nimport { Link,useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\nimport instance from '../../API/Api';\r\nimport { LoginAuth } from '../../context/LoginContext';\r\n\r\n\r\n\r\nconst toastPosition = {\r\n    position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n}\r\n\r\nconst LoginView = () => {\r\n    const [token,settoken] = useContext(LoginAuth)\r\n    const [email, setemail] = useState('')\r\n    const [password, setpassword] = useState('')\r\n    const [loading, setloading] = useState(false)\r\n    const toastId = useRef(null);\r\n    const navigate = useNavigate()\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        setloading(true)\r\n        toastId.current = toast(\"Request is process\", toastPosition);\r\n\r\n          try {\r\n            const result = await instance.post('/auth', {\r\n                email,password\r\n            })\r\n              \r\n            toast.update(toastId.current, {\r\n                render:'Login successfully',\r\n                type: toast.TYPE.SUCCESS,\r\n                autoClose: 3000,\r\n                hideProgressBar:true\r\n            });\r\n              settoken(result.data.token)\r\n              localStorage.setItem('token',result.data.token)\r\n              console.log(result.data)\r\n              setloading(false)\r\n              navigate('/')\r\n          } catch (error) {\r\n              console.log(error.response.data)\r\n\r\n              const data = error.response.data\r\n\r\n              toast.update(toastId.current, {\r\n                render:data.error,\r\n                type: toast.TYPE.ERROR,\r\n                autoClose: 3000,\r\n                hideProgressBar:true\r\n              });\r\n\r\n              setloading(false)\r\n          }\r\n           \r\n    }\r\n\r\n\r\n    return (\r\n        <Wraper >\r\n            <Content>\r\n                <div className='imgContainer'>\r\n                   <img src={profileImg} alt=\"profile\" /> \r\n                </div>\r\n                <h2 className='logintext'>Login</h2>\r\n                <form className='form' onSubmit={onSubmit} >\r\n                    <div className='inputcontainer'>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" required className='inpfield' value={email} onChange={(event)=>setemail(event.target.value) }/>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <div className='underline'></div>\r\n                   </div>\r\n                   <div className='inputcontainer'>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" required className='inpfield' value={ password} onChange={(event)=>setpassword(event.target.value) }/>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <div className='underline'></div>\r\n                   </div>\r\n                   <div className='bottomV'>\r\n                        {loading ?\r\n                            <>\r\n                                 <p className=\"link\">Create new account ? Sign in</p>\r\n                                 <button type='button' className='btn'>LOGIN</button>\r\n                            </> :\r\n                            <>\r\n                                <p className=\"link\">Create new account ? <Link className='linkd' to='/Signin'> Sign In</Link></p>\r\n                                <button type=\"submit\" className='btn'>LOGIN</button>\r\n                            </>\r\n                        }\r\n                    \r\n                    </div>\r\n               </form>\r\n           </Content>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default LoginView\r\n","import React from 'react'\r\nimport LoginView from '../components/LoginView'\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n           <LoginView/>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import styled from 'styled-components'\r\nimport bgImage from '../../images/bg.jpg'\r\n\r\n\r\nexport const Wraper = styled.div`\r\n   background:url(${bgImage}) no-repeat;\r\n   height: 100vh;\r\n   background-size: cover;\r\n   background-position: center;\r\n   position: relative;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   padding: 0 10px;\r\n`\r\n\r\nexport const Content = styled.div`\r\n   width: 100%;\r\n   height: 450px;\r\n   max-width: 485px;\r\n   background-color: rgba(0,0,0,0.7);\r\n   border-radius: 10px;\r\n   box-shadow: 0 15px 25px rgba(0,0,0,0.5) ;\r\n   position: relative;\r\n   display: flex;\r\n   align-items: center;\r\n   flex-direction: column;\r\n   padding: 20px 40px;\r\n\r\n   @media (max-width:400px){\r\n      padding:30px 20px;\r\n   }\r\n\r\n   .imgContainer{\r\n      position: absolute;\r\n      width: 100px;\r\n      height: 100px;\r\n      background-color:  rgba(255,255,255,0.8);\r\n      top:-12%;\r\n      left:50% -50;\r\n      border-radius: 50%;\r\n      overflow: hidden;\r\n      pointer-events: none;\r\n   }\r\n   img{\r\n      width: 100%;\r\n      height: 100%;\r\n   }\r\n\r\n   .logintext{\r\n      font-family: 'Segoe UI', 'Tahoma', 'Geneva', 'Verdana', 'sans-serif';\r\n      color: #ff652f;\r\n      margin-top: 15%;\r\n      font-size: 1.8rem;\r\n   }\r\n   .form{\r\n      width: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      flex-direction: column;\r\n   }\r\n   .inputcontainer{\r\n      width:100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      position: relative;\r\n      \r\n   }\r\n\r\n   .inpfield{\r\n      outline: none;\r\n      border: none;\r\n      height: 40px;\r\n      font-size: 18px;\r\n      padding: 0 10px;\r\n      background-color: transparent;\r\n      border-bottom: 1px solid silver;\r\n      margin-bottom: 30px;\r\n      color: var(--white);\r\n      font-family: 'sans-serif';\r\n      transition: 0.3s ease-in;\r\n      \r\n   }\r\n   \r\n  .inputcontainer label{\r\n     position: absolute;\r\n     bottom: 45px;\r\n     transition: 0.3s ease;\r\n     font-size: 18px;\r\n     color: var(--white);\r\n     font-family: 'sans-serif';\r\n     pointer-events: none;\r\n  }\r\n \r\n  .inputcontainer input:not([value='']) ~ label,\r\n  .inputcontainer input:valid ~ label,\r\n  .inputcontainer input:focus ~ label{\r\n     transform: translateY(-23px);\r\n     font-size: 20px;\r\n     color: #ff652f;\r\n  }\r\n  \r\n\r\n  .inputcontainer input:-webkit-autofill{\r\n    box-shadow:0 0 0 1000px rgba(0,0,0,0.3) inset !important;\r\n    \r\n  }\r\n\r\n  .inputcontainer .underline{\r\n     position: absolute;\r\n     bottom: 30px;\r\n     width: 100%;\r\n     height: 2px;\r\n     \r\n  }\r\n  .inputcontainer .underline:before{\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      content: '';\r\n      background-color: var(--white);\r\n      transform: scaleX(0);\r\n      transition:transform 0.3s ease;\r\n  }\r\n  .inputcontainer input:focus ~ .underline:before,\r\n  .inputcontainer input:valid ~ .underline:before{\r\n      \r\n\r\n      transform: scaleX(1);\r\n  }\r\n\r\n  .btn{\r\n      width: 100px;\r\n      height: 40px;\r\n      border: none;\r\n      background-color: #ff652f;\r\n      cursor: pointer;\r\n      border-radius: 5px;\r\n      font-family: sans-serif;\r\n      font-size: 18px;\r\n      font-weight: 400;\r\n      color: var(--darkGray);\r\n  }\r\n  .bottomV{\r\n     display: flex;\r\n     flex-direction: row;\r\n     justify-content: space-between;\r\n     width: 100%;\r\n     align-items: center;\r\n  }\r\n  .link{\r\n      \r\n      font-size: 20px;\r\n      color: var(--white);\r\n  }\r\n  .linkd{\r\n      color: #ff652f;\r\n  }\r\n \r\n`\r\n","import React,{useState,useRef} from 'react'\r\nimport { Wraper, Content} from './Signup.styles'\r\nimport profileImg from '../../images/avatar.png'\r\nimport { Link,useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\nimport instance from '../../API/Api';\r\n\r\nconst toastPosition = {\r\n    position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n}\r\n\r\n\r\nconst Signup = () => {\r\n    const [name, setname] = useState('')\r\n    const [email, setemail] = useState('')\r\n    const [password, setpassword] = useState('')\r\n    const [loading, setloading] = useState(false)\r\n    const toastId = useRef(null);\r\n    const navigate = useNavigate()\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        setloading(true)\r\n        toastId.current = toast(\"Request is process\", toastPosition);\r\n\r\n          try {\r\n            const result = await instance.post('/users', {\r\n                name,email,password\r\n            })\r\n              \r\n            toast.update(toastId.current, {\r\n                render:'Account created successfully',\r\n                type: toast.TYPE.SUCCESS,\r\n                autoClose: 3000,\r\n                hideProgressBar:true\r\n            });\r\n              \r\n              console.log(result)\r\n              setloading(false)\r\n              navigate('/Login')\r\n          } catch (error) {\r\n              console.log(error.response.data)\r\n\r\n              const data = error.response.data\r\n\r\n              toast.update(toastId.current, {\r\n                render:data.error,\r\n                type: toast.TYPE.ERROR,\r\n                autoClose: 3000,\r\n                hideProgressBar:true\r\n              });\r\n\r\n              setloading(false)\r\n          }\r\n    }\r\n\r\n    return (\r\n        <Wraper >\r\n            \r\n            <Content>\r\n           \r\n                <div className='imgContainer'>\r\n                   <img src={profileImg} alt=\"profile\" /> \r\n                </div>\r\n                <h2 className='logintext'>Sign in</h2>\r\n                <form className='form' onSubmit={onSubmit} >\r\n                <div className='inputcontainer'>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" minLength={5} required className='inpfield' value={name} onChange={(event)=>setname(event.target.value) }/>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <div className='underline'></div>\r\n                   </div>\r\n                    <div className='inputcontainer'>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" required className='inpfield' value={email} onChange={(event)=>setemail(event.target.value) }/>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <div className='underline'></div>\r\n                   </div>\r\n                   <div className='inputcontainer'>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" required minLength={8} className='inpfield' value={ password} onChange={(event)=>setpassword(event.target.value) }/>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <div className='underline'></div>\r\n                    </div>\r\n                    <div className='bottomV'>\r\n                        {loading ?\r\n                            <>\r\n                                 <p className=\"link\">Have account ? Login</p>\r\n                                 <button type='button' className='btn'>SIGN IN</button>\r\n                            </> :\r\n                            <>\r\n                                <p className=\"link\">Have account ? <Link className='linkd' to='/Login'> Login</Link></p>\r\n                                <button type=\"submit\" className='btn'>SIGN IN</button>\r\n                            </>\r\n                        }\r\n                    \r\n                    </div>\r\n                  \r\n               </form>\r\n           </Content>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react';\nimport Home from './components/Home';\nimport { GlobalStyle } from './GlobalStyle';\nimport {BrowserRouter as Router,Routes,Route} from 'react-router-dom'\nimport Movie from './Screens/Movie';\nimport NotFound from './Screens/NotFound';\nimport Login from './Screens/Login';\nimport Signup from './components/SignUp';\nimport { LoginContext } from './context/LoginContext';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = () => (\n  <Router >\n     <LoginContext>\n        <Routes  >\n          <Route  path='/Signin' element={ <Signup/>}/>\n          <Route path='/Login' element={ <Login/>}/>\n          <Route path='/' element={<Home />} />\n          <Route path='/Movie/:MovieId' element={<Movie/>} />\n          <Route path='/*' element={ <NotFound/>}/>\n        </Routes>\n      <GlobalStyle />\n      <ToastContainer />\n    </LoginContext>\n  </Router>\n  );\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}